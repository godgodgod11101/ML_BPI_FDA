---
title: "BPI Model Improvement"
author: "Jacky Wang"
format:
    html:
        theme: cosmo
        toc: true
        toc-depth: 2
        toc-location: right
        toc-title: "On this page"
        css: "css_toc/toc-style.css"
        df-print: paged
---



## Code Structure

1. **資料清理（DataWrangling.qmd）**
2. 資料不平衡處理（HandlingImbData.qmd）



## Introduction

本程式檔執行內容如下：

1. **Import**：引入資料，資料來源為BPI資料庫。本次測試主題為調整資料擷取期間與放入高風險特徵，故從資料庫擷取特徵篩選後的資料，以在資料前處理條件相同下進行後續建模比較。
2. **Tidy & Transform**：資料清理與轉換。由於模型資料皆為類別變數，故將所有變數轉換為factor型別，同時排除含空值類別（如無相關資料）之樣本。另外，考量後續建模相容性，中文類別名稱會由代號取代。
3. **Split**：切分訓練與測試集。設定不同資料期間、高風險特徵之訓練集，存成`.rda`，供後續建模使用。



## Package

引入所需套件
```{r}
#| message: false
#| warning: false

# tidyverse
library(tibble)
library(dplyr)
library(stringr)
library(purrr)    # map, modify
library(tidyr)    # handle missing values

```



## Import

引入資料
```{r}
load(file = "data/vegetable_ori.rda")
```

```{r}
#| echo: false
cat("資料維度：", dim(tbl_ori)[[1]], "obs. of", dim(tbl_ori)[[2]], "variables")
```

顯示部分資料內容
```{r}
#| echo: false
tbl_ori[c(1:4, 15)] %>% 
    mutate(
        簽審核准許可文件編號 = {str_sub(簽審核准許可文件編號, end = 6L) %>% str_c("...")}, 
        受理日期 = {str_sub(受理日期, end = 5L) %>% str_c("...")}
    ) %>% 
    head(n = 5L)
```



## Tidy & Transform

資料清理與轉換

### others

將非用於建模之報單額外資訊另存於資料表 `tbl_others`
```{r}
tbl_others <- tbl_ori %>% 
    select(簽審核准許可文件編號, 報單項次, 受理日期)
```

檢視有無 **缺失值**
```{r}
tbl_others %>% 
    summarise(
        .data = ., 
        across(    # 套用至多個欄位
            .cols = everything(),    # tidy-select
            .fns = list(n_na = ~ sum(is.na(.x))),    # purrr-style lambda
            .names = "{.fn}({.col})"
        )
  )
```

檢視有無 **重複值**
```{r}
tbl_others %>% 
    summarise(., n_unique = n_distinct(簽審核准許可文件編號))
```

檢視有無 **不符規則的格式**
```{r}
#   簽審編號
pat_sn <- "IF[A-Z]0[0-9][A-Z0-9]{2}[0-9]{7}"    # length 1 atomic vector
tbl_others %>% 
    summarise(., n_abnormal = sum(!str_detect(簽審核准許可文件編號, pat_sn)))

#   日期
n_abn <- tbl_ori$受理日期 %>% as.Date() %>% is.na() %>% sum()
tibble(n_abnormal = n_abn)
```

```{r}
#| echo: false
rm(pat_sn, n_abn)
```

欄位「受理日期」轉換格式（character -> date）
```{r}
tbl_others <- tbl_others %>% 
    mutate(受理日期 = as.Date(受理日期))
```





### main

#### 處理目標變數

```{r}

# tbl_ori$`批檢驗結果(除去標示因素)` %>% 
#     factor(., levels = c("合格", "不合格")) %>% 
#     summary()    # summary factor

# target
y <- tbl_ori$`批檢驗結果(除去標示因素)` %>% 
    factor(., 
        levels = c("合格", "不合格"),    # 將預測目標放後
        labels = c("Pass", "Fail")
    )

```

#### 處理特徵

```{r}

# 黑名單特徵
tbl_X_g1 <- tbl_ori %>% 
    select(contains("黑名單")) %>% 
    mutate(
        across(    # 套用至多個欄位
            .cols = everything(),    # tidy-select
            .fns = ~ factor(.x, levels = c("0", "1"), labels = c("no", "yes")), 
            .names = "{.col}_"    # 不改欄位名稱表示取代
        )
        , .keep = "none"    # 不保留原始資料
    ) %>% 
    rename(
         `黑名單產品(75%)` = `黑名單產品_`, 
         `黑名單號列(75%)` = `黑名單號列_`, 
         `黑名單號列(avg)` = `黑名單產品(舊)_`,
         `黑名單生產國(75%)` = `黑名單生產國_`,
         `黑名單進口商(75%)` = `黑名單進口商_`,
    )

# 檢視轉換結果
tbl_X_g1 %>% summary()

```

```{r}
#| echo: false
# 嘗試迴圈寫法

```

```{r}

# 尋找含缺失值（無...）特徵

#   已處理欄位名稱
cols_exc <- c(names(tbl_others), "批檢驗結果(除去標示因素)") 

#   取出含缺失值特徵名稱
pick_naCols <- tbl_ori %>% 
    select(!(all_of(cols_exc) | contains("黑名單"))) %>%    # 排除已處理欄位
    map(.x = ., .f = \(x) levels(as.factor(x))) %>%    # 特徵轉factor取levels
    map_lgl(., \(x) any(str_detect(x, "無")))    # 檢測含「無...」level特徵

cols_na <- names(pick_naCols)[pick_naCols]

rm(cols_exc, pick_naCols)
# map(.x, .f, )
    # df（包含tbl）為list，可直接當作參數
    # \(x) anonymous function
```

```{r}

# 利用factor()重設levels參數，將「無...」轉為<NA>

#   含缺失值特徵levels
ori_lev <- tbl_ori[cols_na] %>% 
    map(\(x) unique(x))

#   排除「無...」level
pick_lev <- ori_lev %>% 
    map(\(x) !str_detect(x, "無"))

new_lev <- map2(
    .x = ori_lev, .y = pick_lev, 
    .f = \(x, y) x[y]
)

#   含缺失值特徵
tbl_X_g2<- modify2(
    .x = tbl_ori[cols_na], .y = new_lev, 
    .f = \(x, y) factor(x, levels = y, labels = seq_along(y))
)


rm(cols_na, ori_lev, pick_lev, new_lev)
# modify: returns the same type as the input object
```

```{r}

# 其餘特徵重設levels

#   排除已處理欄位
cols_exc <- c(names(tbl_others), "批檢驗結果(除去標示因素)", names(tbl_X_g2))

tbl_ori_rest <- tbl_ori %>% 
    select(!(all_of(cols_exc) | contains("黑名單")))

#   重設levels（1, 2, 3, ...）
ori_lev <- tbl_ori_rest %>% 
    map(\(x) {as.character(x) %>% unique() %>% sort()})

tbl_X_g3 <- modify2(
    tbl_ori_rest, ori_lev, 
    \(x, y) factor(x, levels = y, labels = seq_along(y))
)

rm(cols_exc, tbl_ori_rest, ori_lev)
```

#### 合併資料

```{r}

tbl_wra <- bind_cols(
    tibble(
        `Date` = tbl_others$受理日期, 
        `Y` = y
    ), 
    tbl_X_g1, tbl_X_g2, tbl_X_g3
) %>% 
    drop_na()    # 暫不嘗試補值


rm(y, tbl_X_g1, tbl_X_g2, tbl_X_g3)
```



## Split

```{r}

# 特徵名稱轉代號
tbl_name2sym <- tibble(
    `C Names` = names(tbl_wra[-c(1:2)]), 
    `C Symbols` = paste0("X_", seq_along(tbl_wra[-c(1:2)]))
)

names(tbl_wra)[-c(1:2)] <- tbl_name2sym$`C Symbols`

```

### to .rda

```{r}

tbl_wra_sub <- tbl_wra[c(T, T, !str_detect(tbl_name2sym$`C Names`, "黑名單"))]

tbl_train <- tbl_wra_sub %>% 
    filter(Date < as.Date("2019-01-01")) %>% 
    select(!Date)

tbl_train_130101 <- tbl_wra_sub %>% 
    filter(Date >= as.Date("2013-01-01") & Date < as.Date("2019-01-01")) %>% 
    select(!Date)

tbl_train_140703 <- tbl_wra_sub %>% 
    filter(Date >= as.Date("2014-07-03") & Date < as.Date("2019-01-01")) %>% 
    select(!Date)

tbl_test <- tbl_wra_sub %>% 
    filter(Date >= as.Date("2019-01-01")) %>% 
    select(!Date)

# 組成 list
lst_mdlData <- list(
    train = list(
        `all` = tbl_train, 
        `130101` = tbl_train_130101, 
        `140703` = tbl_train_140703
    ), 
    test = list(`test` = tbl_test), 
    others = list(
        `sn` = tbl_others, 
        `fName` = tbl_name2sym
    )
)


rm(tbl_wra_sub, tbl_train, tbl_train_130101, tbl_train_140703, tbl_test)
```

```{r}
# save(lst_mdlData, file = "data/vegetable_ds.rda")
```





