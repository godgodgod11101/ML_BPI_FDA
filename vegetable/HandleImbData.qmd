---
title: "BPI Model Improvement"
author: "Jacky Wang"
format:
    html:
        theme: cosmo
        toc: true
        toc-depth: 2
        toc-location: right
        toc-title: "On this page"
        css: "css/style.css"
        df-print: paged
---



## Code Structure

1. [資料整理](https://godgodgod11101.github.io/ML_BPI_FDA/vegetable/DataWrangling.html)
2. **資料不平衡處理（本頁內容）**
3. [模型配適](https://godgodgod11101.github.io/ML_BPI_FDA/vegetable/ModelFitting.html)
4. [模型評估](https://godgodgod11101.github.io/ML_BPI_FDA/vegetable/ModelEvaluating.html)



## Introduction

本程式檔進行資料不平衡處理，執行內容說明如下：

1. Import Data：引入訓練集資料做處理。
2. Handle Imbalanced：進行資料不平衡處理。



## Package

引入所需套件
```{r}
#| message: false
#| warning: false

# tidyverse
library(tibble)
library(dplyr)
library(purrr)    # FP toolkit，以map()、modify()取代for-loop

```



## Import Data

引入資料
```{r}
load(file = "data/vegetable_tra.rda")
```

```{r}
#| echo: false
lst_train %>% str(max.level = 1)
```

* [資料擷取期間調整]{.hl}評估使用訓練集資料：
  + [all]{.obj} ：擷取 2011-01-01 至 2018-12-31 資料（同BPI模型）
  + [130101]{.obj} ：擷取 [2013-01-01]{.hl} 至 2018-12-31 資料（農藥檢驗項目調整至[252項]{.hl}）
  + [140703]{.obj} ：擷取 [2014-07-03]{.hl} 至 2018-12-31 資料（農藥檢驗項目調整至[311項]{.hl}）


## Handle Imbalanced

檢視各訓練集中，[目標（不合格報單）]{.hl}占整體比例
```{r}

# function
fail_ratio <- function(vec_y) {
    
    pf <- vec_y %>% summary()
    n_fail <- pf[[1]]
    n_pass <- pf[[2]]
    f_ratio <- n_fail / (n_fail+n_pass)
    
    f_ratio_ch <- round(f_ratio*100, digits = 2) %>% 
        as.character() %>% 
        paste0(., "%")
    rsl <- list(`fail_ratio`=f_ratio_ch, `n_fail`=n_fail, `n_pass`=n_pass)
    
    return(rsl)
}

# print
bind_rows(
    fail_ratio(lst_train[["all"]]$Y), 
    fail_ratio(lst_train[["130101"]]$Y), 
    fail_ratio(lst_train[["140703"]]$Y)
)

```

使用 [themis]{.obj} 進行資料不平衡處理，搭配 [recipes]{.obj} 建構處理流程
```{r}
#| message: false
#| warning: false

library(recipes)    # build feature engineering steps
library(themis)    # deal with unbalanced data

```

統一使用[少數類別過採樣]{.hl}的方式（不合成新樣本），將少數類別樣本占整體比例調至[30%]{.hl}
```{r}

# function
upsample_bake <- function(prep_train) {
    
    rec <- recipe(Y ~ ., data = lst_train$all) %>% 
        # 定義資料結構的資料集（定義formula、儲存欄位型別）
        
        step_upsample(Y, over_ratio = 3/7, skip = TRUE) %>%
        # skip=TRUE (default): 若bake()中new_data非NULL，此步驟會跳過（表示只用於訓練集）
        
        prep(training = prep_train)
        # 配適的資料集（後續會根據此資料集的少數類別樣本做過採樣）
    
    rsl <- bake(rec, new_data = NULL) 
    # 處理的資料集（NULL表示直接作用於配適的資料集）
    
    return(rsl)
}

# execute
lst_train_upsam <- map(
    .x = lst_train, 
    .f = upsample_bake
)

```

檢視處理結果
```{r}
bind_rows(
    fail_ratio(lst_train_upsam$all$Y), 
    fail_ratio(lst_train_upsam$`130101`$Y), 
    fail_ratio(lst_train_upsam$`140703`$Y)
)
```



## Save

```{r}
# save(lst_train_upsam, file = "data/vegetable_tra_imb.rda")
```




